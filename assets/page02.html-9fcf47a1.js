import{_ as p,M as i,p as l,q as u,N as r,V as s,R as n,t as a,a1 as d}from"./framework-334dfd58.js";const k={},h=n("h1",{id:"demo-for-page-02",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#demo-for-page-02","aria-hidden":"true"},"#"),a(" Demo for page-02")],-1),v=n("h2",{id:"install",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#install","aria-hidden":"true"},"#"),a(" Install")],-1),g=n("p",null,"Install VuePress Plugin Markdown Enhance:",-1),m=n("div",{class:"language-bash","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"pnpm"),a(),n("span",{class:"token function"},"add"),a(),n("span",{class:"token parameter variable"},"-D"),a(` vuepress-plugin-md-enhance@next
`)])])],-1),b=n("div",{class:"language-bash","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"yarn"),a(),n("span",{class:"token function"},"add"),a(),n("span",{class:"token parameter variable"},"-D"),a(` vuepress-plugin-md-enhance@next
`)])])],-1),_=n("div",{class:"language-bash","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"npm"),a(" i "),n("span",{class:"token parameter variable"},"-D"),a(` vuepress-plugin-md-enhance@next
`)])])],-1),f=d(`<h2 id="demo-for-container" tabindex="-1"><a class="header-anchor" href="#demo-for-container" aria-hidden="true">#</a> Demo for container</h2><div class="hint-container info"><p class="hint-container-title">Info</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>pip3 <span class="token function">install</span> torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu116
</code></pre></div><p>Get the version of PyTorch:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> logging

<span class="token keyword">import</span> torch

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;PyTorch:&#39;</span><span class="token punctuation">,</span> torch<span class="token punctuation">.</span>__version__<span class="token punctuation">)</span>

device <span class="token operator">=</span> <span class="token boolean">None</span>
<span class="token keyword">if</span> torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    device <span class="token operator">=</span> torch<span class="token punctuation">.</span>device<span class="token punctuation">(</span><span class="token string">&#39;cuda&#39;</span><span class="token punctuation">)</span>
    logging<span class="token punctuation">.</span>log<span class="token punctuation">(</span><span class="token string">&#39;CUDA:&#39;</span><span class="token punctuation">,</span> torch<span class="token punctuation">.</span>version<span class="token punctuation">.</span>cuda<span class="token punctuation">)</span>
    logging<span class="token punctuation">.</span>log<span class="token punctuation">(</span><span class="token string">&#39;cuDNN:&#39;</span><span class="token punctuation">,</span> torch<span class="token punctuation">.</span>backends<span class="token punctuation">.</span>cudnn<span class="token punctuation">.</span>version<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    device <span class="token operator">=</span> torch<span class="token punctuation">.</span>device<span class="token punctuation">(</span><span class="token string">&#39;cpu&#39;</span><span class="token punctuation">)</span>
    logging<span class="token punctuation">.</span>warn<span class="token punctuation">(</span><span class="token string">&#39;CUDA is not available, using CPU instead! Check your CUDA installation!&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><details class="hint-container details"><summary>Details</summary><p>Install Pnpm:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-g</span> <span class="token function">pnpm</span>
</code></pre></div></details>`,3);function x(y,w){const c=i("CodeTabs");return l(),u("div",null,[h,v,g,r(c,{id:"9",data:[{title:"pnpm"},{title:"yarn"},{title:"npm"}],active:2,"tab-id":"shell"},{tab0:s(({title:e,value:t,isActive:o})=>[m]),tab1:s(({title:e,value:t,isActive:o})=>[b]),tab2:s(({title:e,value:t,isActive:o})=>[_]),_:1}),f])}const C=p(k,[["render",x],["__file","page02.html.vue"]]);export{C as default};
